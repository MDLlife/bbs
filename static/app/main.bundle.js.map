{"version":3,"sources":["webpack:///./src async","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/components/boards/boards-list.component.html","webpack:///./src/components/boards/boards-list.component.ts","webpack:///./src/components/boards/boards.css","webpack:///./src/components/index.ts","webpack:///./src/components/threadPage/threadPage.css","webpack:///./src/components/threadPage/threadPage.html","webpack:///./src/components/threadPage/threadPage.ts","webpack:///./src/components/threads/threads.css","webpack:///./src/components/threads/threads.html","webpack:///./src/components/threads/threads.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/providers/api/api.service.ts","webpack:///./src/providers/index.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = ./src async recursive\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = 1","module.exports = \"<!--The whole content below can be removed with the new code.-->\\n<boards-list (board)=\\\"openThreads($event)\\\"></boards-list>\\n<threads (thread)=\\\"openThreadpage($event)\\\"></threads>\\n<threadPage></threadPage>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = 1","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ApiService } from \"../providers\";\nimport { BoardsListComponent, ThreadsComponent, ThreadPageComponent } from \"../components\";\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  @ViewChild(BoardsListComponent) boards: BoardsListComponent;\n  @ViewChild(ThreadsComponent) threads: ThreadsComponent;\n  @ViewChild(ThreadPageComponent) threadPage: ThreadPageComponent\n  title = 'app';\n  constructor(private api: ApiService) {\n  }\n  ngOnInit() {\n    this.api.getBoards();\n  }\n  openThreads(key: string) {\n    this.threads.start(key);\n  }\n  openThreadpage(data: { master: string, ref: string }) {\n    this.threadPage.open(data.master, data.ref);\n  }\n  test() {\n    console.log('test');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { ApiService } from \"../providers\";\n\nimport { BoardsListComponent, ThreadsComponent, ThreadPageComponent } from \"../components\";\n@NgModule({\n  declarations: [\n    AppComponent, BoardsListComponent, ThreadsComponent, ThreadPageComponent\n  ],\n  imports: [\n    BrowserModule, HttpModule\n  ],\n  providers: [ApiService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"<div class='boards'>\\n  <div class='boards-container'>\\n    <div *ngFor=\\\"let board of boards\\\" class=\\\"item\\\" (click)=\\\"openThreads($event)\\\">\\n      <div class=\\\"content\\\">\\n        <h3 class=\\\"name\\\">{{board.name}}</h3>\\n        <div class=\\\"description\\\">{{board.description}}</div>\\n        <div class=\\\"created\\\">{{board.created / 1000000 | date: 'medium'}}</div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/boards/boards-list.component.html\n// module id = ./src/components/boards/boards-list.component.html\n// module chunks = 1","import { Component, OnInit, ViewEncapsulation, Output, EventEmitter } from '@angular/core';\nimport { ApiService } from \"../../providers\";\nimport { Board } from \"../../providers/api/msg\";\n\n@Component({\n    selector: 'boards-list',\n    templateUrl: 'boards-list.component.html',\n    styleUrls: ['boards.css'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class BoardsListComponent implements OnInit {\n    @Output() board: EventEmitter<string> = new EventEmitter();\n    boardsTitle: string = 'Boards List';\n    errorMessage: string;\n    boards: Array<Board> = [];\n    constructor(private api: ApiService) {\n\n    }\n\n    ngOnInit(): void {\n        this.api.getBoards().then(data => {\n            this.boards = <Array<Board>>data;\n        });\n    }\n    openThreads(ev: Event) {\n        ev.stopImmediatePropagation();\n        ev.stopPropagation();\n        this.board.emit(this.boards[0].public_key);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/boards/boards-list.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"boards-list {\\n  width: 100%;\\n  margin: 2rem 0;\\n}\\n\\n.boards {\\n  width: 100%;\\n}\\n.boards .boards-container {\\n  width: 90%;\\n  margin: 0 auto;\\n  /*overflow: hidden;*/\\n}\\n.boards .boards-container .item {\\n  /*width: 50%;*/\\n  display: block;\\n  float: left;\\n  padding: 1rem;\\n  cursor: pointer;\\n  color: #000;\\n  /*overflow: hidden;*/\\n  text-decoration: none;\\n}\\n.boards .boards-container .item:hover,\\n.boards .boards-container .item:focus {\\n  text-decoration: none;\\n}\\n.boards .boards-container .item .content {\\n  width: 100%;\\n  padding: 1rem;\\n  border: .1rem solid #999;\\n  overflow: hidden;\\n}\\n.boards .boards-container .item .content .name {\\n  margin: .5rem 0;\\n}\\n.boards .boards-container .item .content .description {\\n  font-size: 1.5rem;\\n  color: #ccc;\\n}\\n\\n.boards .boards-container .item .content .created {\\n  /*text-align:  right;*/\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/boards/boards.css\n// module id = ./src/components/boards/boards.css\n// module chunks = 1","export * from './boards/boards-list.component';\nexport * from './threads/threads';\nexport * from './threadPage/threadPage'\n\n\n// WEBPACK FOOTER //\n// ./src/components/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"threadPage {\\n  width: 100%;\\n}\\n\\n.container {\\n  width: 90%;\\n  margin: 0 auto;\\n}\\n\\n.container .thread {\\n  border-bottom: .1rem solid #000;\\n}\\n.container .posts {\\n  border: .1rem solid #ccc;\\n  margin: 1rem 0;\\n  padding: 1rem;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/threadPage/threadPage.css\n// module id = ./src/components/threadPage/threadPage.css\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"thread\\\">\\n    <h3>{{data.thread.name}}</h3>\\n    <p>{{data.thread.description}}</p>\\n  </div>\\n  <div class=\\\"posts\\\" *ngFor=\\\"let item of data.posts\\\">\\n    <div>title:{{item.title}}</div>\\n    <div>body:{{item.body}}</div>\\n    <div>author:{{item.author}}</div>\\n    <div>{{item.created / 1000000 | date:'medium'}}</div>\\n  </div>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/threadPage/threadPage.html\n// module id = ./src/components/threadPage/threadPage.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from \"../../providers\";\n@Component({\n  selector: 'threadPage',\n  templateUrl: 'threadPage.html',\n  styleUrls: ['threadPage.css']\n})\n\nexport class ThreadPageComponent implements OnInit {\n  data: { posts: Array<any>, thread: any } = { posts: [], thread: { name: '', description: '' } };\n  constructor(private api: ApiService) { }\n\n  ngOnInit() { }\n\n  open(master, ref: string) {\n    console.warn('open:', master);\n    this.api.getThreadpage(master, ref).then(data => {\n      console.warn('get threads2:', data);\n      this.data = <{ posts: Array<any>, thread: any }>data;\n      console.log('this data:', this.data);\n    });\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/threadPage/threadPage.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"threads {\\n  width: 100%;\\n}\\n\\n.threads {\\n  width: 100%;\\n}\\n.threads .threads-container {\\n  width: 90%;\\n  margin: 0 auto;\\n  \\n}\\n.threads .threads-container .item {\\n  display: block;\\n  width: 100%;\\n  text-decoration: none;\\n  /*border-top: .1rem solid #ccc;*/\\n  border-bottom: .1rem solid #ccc;\\n}\\n.threads .threads-container .item:hover {\\n  /*border-left: 1rem solid blue;*/\\n  /*padding-left: 1rem;*/\\n  border-bottom: .1rem solid #000;\\n}\\n.threads .threads-container .item:hover .name {\\n  color: #b50a0a;\\n}\\n.threads .threads-container .item:hover .description {\\n  color: #981f1f;\\n}\\n\\n.threads .threads-container .item .description {\\n  color: #999;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/threads/threads.css\n// module id = ./src/components/threads/threads.css\n// module chunks = 1","module.exports = \"<div class=\\\"threads\\\">\\n  <div class=\\\"threads-container\\\">\\n    <div *ngFor=\\\"let item of threads\\\" class=\\\"item\\\" (click)=\\\"open(item.master_board,item.ref)\\\">\\n      <h3 class=\\\"name\\\">{{item.name}}</h3>\\n      <p class=\\\"description\\\">{{item.description}}</p>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/threads/threads.html\n// module id = ./src/components/threads/threads.html\n// module chunks = 1","import { Component, OnInit, ViewEncapsulation, Output, EventEmitter } from '@angular/core';\nimport { ApiService } from \"../../providers\";\n@Component({\n  selector: 'threads',\n  templateUrl: 'threads.html',\n  styleUrls: ['threads.css'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class ThreadsComponent implements OnInit {\n  @Output() thread: EventEmitter<{ master: string, ref: string }> = new EventEmitter();\n  constructor(private api: ApiService) { }\n  threads: Array<any> = [];\n  ngOnInit() {\n  }\n  start(key) {\n    this.api.getThreads(key).then(data => {\n      console.warn('get threads:', data);\n      this.threads = <Array<any>>data;\n    });\n  }\n\n  open(master, ref: string) {\n    this.thread.emit({ master: master, ref: ref });\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/threads/threads.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Injectable } from '@angular/core';\nimport { Http } from \"@angular/http\";\nimport { Board, Thread, ThreadPage, Post } from \"./msg\";\n\n@Injectable()\nexport class ApiService {\n  private base_url = 'http://127.0.0.1:7410/api/'\n  constructor(private http: Http) {\n\n  }\n  getThreads(key: string) {\n    let data = new FormData();\n    data.append('board', key);\n    return this.handlePost(this.base_url + 'get_threads', data);\n  }\n\n  getBoards() {\n    return this.handleGet(this.base_url + 'get_boards');\n  }\n\n  getPosts(masterKey: string, sub: string) {\n    let form = new FormData();\n    form.append('board', masterKey);\n    form.append('thread', sub);\n    return this.handlePost(this.base_url + 'get_posts', form);\n  }\n\n\n  // get_threadpage\n  getThreadpage(masterKey: string, sub: string) {\n    let form = new FormData();\n    form.append('board', masterKey);\n    form.append('thread', sub);\n    return this.handlePost(this.base_url + 'get_threadpage', form);\n  }\n\n  addBoard(data: FormData) {\n    return this.handlePost(this.base_url + 'new_board', data);\n  }\n\n  addThread(data: FormData) {\n    return this.handlePost(this.base_url + 'new_thread', data);\n  }\n\n  addPost(data: FormData) {\n    return this.handlePost(this.base_url + 'new_post', data);\n  }\n\n  changeThread(data: FormData) {\n    return this.handlePost(this.base_url + 'import_thread', data);\n  }\n\n  private handlePost(url, data: FormData) {\n    return new Promise((resolve, reject) => {\n      this.http.post(url, data).subscribe(res => {\n        resolve(res.json());\n      }, err => {\n        reject(err);\n      })\n    });\n  }\n\n  private handleGet(url) {\n    return new Promise((resolve, reject) => {\n      this.http.get(url).subscribe(res => {\n        resolve(res.json());\n      }, err => {\n        reject(err);\n      })\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/api/api.service.ts","export * from './api/api.service'\n\n\n// WEBPACK FOOTER //\n// ./src/providers/index.ts"],"sourceRoot":""}